{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["../../home/aaltamir/work/angular2/angular2-dashboard/tmp/broccoli_type_script_compiler-input_base_path-PkK8zDWh.tmp/0/src/app/services/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable }      from '@angular/core';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport { Router }          from '@angular/router';\n\n// Avoid name not found warnings\ndeclare var Auth0: any;\n\n@Injectable()\nexport class Auth {\n  // Configure Auth0\n  auth0 = new Auth0({\n    domain: 'agusap.auth0.com',\n    clientID: 'ZW57eLzcaibrXlgq4aMSyLjSKOedGtai',\n    callbackOnLocationHash: true,\n    callbackURL: 'http://localhost:4200/home',\n  });\n\n  constructor(private _router: Router) {\n    var result = this.auth0.parseHash(window.location.hash);\n\n    if (result && result.idToken) {\n\n      this.auth0.getProfile(result.idToken, function (err, profile) {\n        localStorage.setItem('id_token', result.idToken);\n        localStorage.setItem('profile', JSON.stringify(profile));\n      });\n\n      this._router.navigate(['home']);\n    } else if (result && result.error) {\n      alert('error: ' + result.error);\n    }\n  }\n\n  public signUp(username, password) {\n    this.auth0.signup({\n      connection: 'Username-Password-Authentication',\n      responseType: 'token',\n      email: username,\n      password: password,\n    }, function(err) {\n      if (err) alert(\"something went wrong: \" + err.message);\n    });\n  };\n\n  public login(username, password) {\n    console.log(username + \" - \" + password);\n    this.auth0.login({\n      connection: 'Username-Password-Authentication',\n      responseType: 'token',\n      email: username,\n      password: password,\n    }, function(err) {\n      if (err) alert(\"something went wrong: \" + err.message);\n    });\n  };\n\n  public googleLogin() {\n    this.auth0.login({\n      connection: 'google-oauth2'\n    }, function(err) {\n      if (err) alert(\"something went wrong: \" + err.message);\n    });\n  };\n\n  public authenticated() {\n    // Check if there's an unexpired JWT\n    // It searches for an item in localStorage with key == 'id_token'\n    return tokenNotExpired();\n  };\n\n  public logout() {\n    // Remove token from localStorage\n    localStorage.removeItem('profile');\n    localStorage.removeItem('id_token');\n  };\n}\n"]}