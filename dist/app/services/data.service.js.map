{"version":3,"file":"data.service.js","sourceRoot":"","sources":["../../home/aaltamir/work/angular2/angular2-dashboard/tmp/broccoli_type_script_compiler-input_base_path-PkK8zDWh.tmp/0/src/app/services/data.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,6BAAyB,cAAc,CAAC,CAAA;AACxC,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,QAAO,0BAA0B,CAAC,CAAA;AAGlC;IAEE,qBAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,oCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ;aACjB,GAAG,CAAC,iCAAiC,CAAC;aACtC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,iCAAW,GAAnB,UAAqB,KAAK;QACxB,oEAAoE;QACpE,8DAA8D;QAC9D,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC1C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QAC1E,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAnBH;QAAC,iBAAU,EAAE;;mBAAA;IAoBb,kBAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,mBAAW,cAmBvB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthHttp } from 'angular2-jwt';\nimport { Observable } from 'rxjs/Observable';\nimport '../shared/rxjs-operators';\n\n@Injectable()\nexport class DataService {\n\n  constructor(private authHttp: AuthHttp) {}\n\n  getSecretQuote() : Observable<string> {\n    return this.authHttp\n      .get('http://localhost:3002/api/quote')\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  private handleError (error) {\n    // In a real world app, we might use a remote logging infrastructure\n    // We'd also dig deeper into the error to get a better message\n    let errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(errMsg); // log to console instead\n    return Observable.throw(errMsg);\n  }\n}\n"]}